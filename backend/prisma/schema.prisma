// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        Int         @id @default(autoincrement())
  email                     String      @unique
  username                  String?     @unique
  name                      String?
  password                  String
  mobileNum                 String?
  role                      Roles       @default(USER)
  profilePic                String?
  gender                    Gender?
  college_id                String?
  graduation_year           Int?
  cgpa                      Float?
  college                   String?
  department                Department?
  course                    Course?
  state                     String?
  hosteler                  Boolean?
  leetcodeProfile           String?
  codeforcesProfile         String?
  linkedinProfile           String?
  githubProfile             String?
  questions                 Question[]
  authentication            Authentication?
}

model Authentication {
  id                      Int       @id @default(autoincrement())
  user                    User      @relation(fields: [userId], references: [id])
  userId                  Int       @unique
  otpForEmail             String?
  otpEmailExpiry          DateTime?
  otpForPasswordChange    String?
  otpPasswordChangeExpiry DateTime?
  isVerified              Boolean   @default(false)
  isBoarded               Boolean   @default(false)
}

enum Roles {
  USER
  ADMIN
  SUPERADMIN
  MANAGER
}

enum Gender {
  MALE
  FEMALE
  TRANSGENDER
  PREFER_NOT_TO_SAY
}

enum Department {
  COMPUTER_SCIENCE_AND_ENGINEERING
  ELECTRONICS_AND_INSTRUMENTATION_ENGINEERING
  ELECTRONICS_AND_COMMUNICATIONS_ENGINEERING
  ELECTRICAL_ENGINEERING
  MECHANICAL_ENGINEERING
  CHEMICAL_ENGINEERING
  CIVIL_ENGINEERING
  PRODUCTION_ENGINEERING
  BIO_TECH_AND_BIO_ENGINEERING
}

enum Course {
  BTech
  PhD
  MCA
  MTech
}

model Question {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  answer      String?
  user User @relation(fields: [postedBy], references: [id])
  postedBy    Int
  tags        String[]
  links       QueAddOnLink[]
  isApproved  Boolean   @default(false)
  upvotes     Int       @default(0)
  downvotes   Int       @default(0)
}

model QueAddOnLink {
  id    Int    @id @default(autoincrement())
  title String
  url   String
  question Question @relation(fields: [questionId], references: [id])
  questionId Int
}
